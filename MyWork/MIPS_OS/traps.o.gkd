
;; Function trap_init (trap_init, funcdef_no=0, decl_uid=960, cgraph_uid=0)

(note# 0 0 NOTE_INSN_DELETED)
(note# 0 0 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f# 0 0 (set (reg/f:SI 29 $sp)
        (plus:SI (reg/f:SI 29 $sp)
            (const_int -32 [0xffffffffffffffe0]))) traps.c:12# {*addsi3}
     (nil))
(insn# 0 0 (clobber (mem/c:BLK (reg/f:SI 29 $sp) [ A8])) traps.c:12#
     (nil))
(insn/f# 0 0 (set (mem/c:SI (plus:SI (reg/f:SI 29 $sp)
                (const_int 28 [0x1c])) [ S4 A32])
        (reg:SI 31 $31)) traps.c:12# {*movsi_internal}
     (expr_list:REG_FRAME_RELATED_EXPR (set/f (mem/c:SI (plus:SI (reg/f:SI 29 $sp)
                    (const_int 28 [0x1c])) [ S4 A32])
            (reg:SI 31 $31))
        (nil)))
(insn/f# 0 0 (set (mem/c:SI (plus:SI (reg/f:SI 29 $sp)
                (const_int 24 [0x18])) [ S4 A32])
        (reg/f:SI 30 $fp)) traps.c:12# {*movsi_internal}
     (expr_list:REG_FRAME_RELATED_EXPR (set/f (mem/c:SI (plus:SI (reg/f:SI 29 $sp)
                    (const_int 24 [0x18])) [ S4 A32])
            (reg/f:SI 30 $fp))
        (nil)))
(insn/f# 0 0 (set (reg/f:SI 30 $fp)
        (reg/f:SI 29 $sp)) traps.c:12# {*movsi_internal}
     (nil))
(note# 0 0 NOTE_INSN_PROLOGUE_END)
(note# 0 0 NOTE_INSN_FUNCTION_BEG)
(insn# 0 0 (set (mem/c:SI (plus:SI (reg/f:SI 30 $fp)
                (const_int 16 [0x10])) [ i+0 S4 A32])
        (const_int 0 [0])) traps.c:15# {*movsi_internal}
     (nil))
(jump_insn# 0 0 (set (pc)
        (label_ref #)) traps.c:15# {*jump_absolute}
     (nil)
 -> 2)
(barrier 0 0 0)
(code_label 3 0 0 3 "" [1 uses])
(note# 0 0 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn# 0 0 (set (reg:SI 4 $4)
        (mem/c:SI (plus:SI (reg/f:SI 30 $fp)
                (const_int 16 [0x10])) [ i+0 S4 A32])) traps.c:16# {*movsi_internal}
     (nil))
(insn# 0 0 (set (reg:SI 2 $2 [194])
        (high:SI (symbol_ref:SI ("handle_reserved") [flags 0x41] <function_decl # handle_reserved>))) traps.c:16# {*movsi_internal}
     (nil))
(insn# 0 0 (set (reg:SI 5 $5)
        (lo_sum:SI (reg:SI 2 $2 [194])
            (symbol_ref:SI ("handle_reserved") [flags 0x41] <function_decl # handle_reserved>))) traps.c:16# {*lowsi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("handle_reserved") [flags 0x41] <function_decl # handle_reserved>)
        (nil)))
(call_insn# 0 0 (parallel [
            (set (reg:SI 2 $2)
                (call (mem:SI (symbol_ref:SI ("set_except_vector") [flags 0x3] <function_decl # set_except_vector>) [ set_except_vector S4 A32])
                    (const_int 16 [0x10])))
            (clobber (reg:SI 31 $31))
        ]) traps.c:16# {call_value_internal}
     (nil)
    (expr_list:REG_LABEL_TARGET (use (reg:SI 5 $5))
        (expr_list:REG_LABEL_TARGET (use (reg:SI 4 $4))
            (nil))))
(insn# 0 0 (set (reg:SI 2 $2 [196])
        (mem/c:SI (plus:SI (reg/f:SI 30 $fp)
                (const_int 16 [0x10])) [ i+0 S4 A32])) traps.c:15# {*movsi_internal}
     (nil))
(insn# 0 0 (const_int 1 [0x1]) traps.c:15# {hazard_nop}
     (nil))
(insn# 0 0 (set (reg:SI 2 $2 [195])
        (plus:SI (reg:SI 2 $2 [196])
            (const_int 1 [0x1]))) traps.c:15# {*addsi3}
     (nil))
(insn# 0 0 (set (mem/c:SI (plus:SI (reg/f:SI 30 $fp)
                (const_int 16 [0x10])) [ i+0 S4 A32])
        (reg:SI 2 $2 [195])) traps.c:15# {*movsi_internal}
     (nil))
(code_label 2 0 0 2 "" [1 uses])
(note# 0 0 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn# 0 0 (set (reg:SI 2 $2 [197])
        (mem/c:SI (plus:SI (reg/f:SI 30 $fp)
                (const_int 16 [0x10])) [ i+0 S4 A32])) traps.c:15# {*movsi_internal}
     (nil))
(insn# 0 0 (const_int 1 [0x1]) traps.c:15# {hazard_nop}
     (nil))
(insn# 0 0 (set (reg:SI 2 $2 [198])
        (le:SI (reg:SI 2 $2 [197])
            (const_int 31 [0x1f]))) traps.c:15# {*sle_sisi}
     (nil))
(jump_insn# 0 0 (set (pc)
        (if_then_else (ne (reg:SI 2 $2 [198])
                (const_int 0 [0]))
            (label_ref #)
            (pc))) traps.c:15# {*branch_equalitysi}
     (nil)
 -> 3)
(note# 0 0 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn# 0 0 (set (reg:SI 4 $4)
        (const_int 0 [0])) traps.c:19# {*movsi_internal}
     (nil))
(insn# 0 0 (set (reg:SI 2 $2 [199])
        (high:SI (symbol_ref:SI ("handle_int") [flags 0x41] <function_decl # handle_int>))) traps.c:19# {*movsi_internal}
     (nil))
(insn# 0 0 (set (reg:SI 5 $5)
        (lo_sum:SI (reg:SI 2 $2 [199])
            (symbol_ref:SI ("handle_int") [flags 0x41] <function_decl # handle_int>))) traps.c:19# {*lowsi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("handle_int") [flags 0x41] <function_decl # handle_int>)
        (nil)))
(call_insn# 0 0 (parallel [
            (set (reg:SI 2 $2)
                (call (mem:SI (symbol_ref:SI ("set_except_vector") [flags 0x3] <function_decl # set_except_vector>) [ set_except_vector S4 A32])
                    (const_int 16 [0x10])))
            (clobber (reg:SI 31 $31))
        ]) traps.c:19# {call_value_internal}
     (nil)
    (expr_list:REG_LABEL_TARGET (use (reg:SI 5 $5))
        (expr_list:REG_LABEL_TARGET (use (reg:SI 4 $4))
            (nil))))
(insn# 0 0 (set (reg:SI 4 $4)
        (const_int 8 [0x8])) traps.c:20# {*movsi_internal}
     (nil))
(insn# 0 0 (set (reg:SI 2 $2 [200])
        (high:SI (symbol_ref:SI ("handle_sys") [flags 0x41] <function_decl # handle_sys>))) traps.c:20# {*movsi_internal}
     (nil))
(insn# 0 0 (set (reg:SI 5 $5)
        (lo_sum:SI (reg:SI 2 $2 [200])
            (symbol_ref:SI ("handle_sys") [flags 0x41] <function_decl # handle_sys>))) traps.c:20# {*lowsi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("handle_sys") [flags 0x41] <function_decl # handle_sys>)
        (nil)))
(call_insn# 0 0 (parallel [
            (set (reg:SI 2 $2)
                (call (mem:SI (symbol_ref:SI ("set_except_vector") [flags 0x3] <function_decl # set_except_vector>) [ set_except_vector S4 A32])
                    (const_int 16 [0x10])))
            (clobber (reg:SI 31 $31))
        ]) traps.c:20# {call_value_internal}
     (nil)
    (expr_list:REG_LABEL_TARGET (use (reg:SI 5 $5))
        (expr_list:REG_LABEL_TARGET (use (reg:SI 4 $4))
            (nil))))
(note# 0 0 NOTE_INSN_EPILOGUE_BEG)
(insn# 0 0 (clobber (mem/c:BLK (reg/f:SI 29 $sp) [ A8])) traps.c:21#
     (nil))
(insn/f# 0 0 (set (reg/f:SI 29 $sp)
        (reg/f:SI 30 $fp)) traps.c:21# {*movsi_internal}
     (expr_list:REG_CFA_DEF_CFA (plus:SI (reg/f:SI 29 $sp)
            (const_int 32 [0x20]))
        (nil)))
(insn# 0 0 (set (reg:SI 31 $31)
        (mem/c:SI (plus:SI (reg/f:SI 29 $sp)
                (const_int 28 [0x1c])) [ S4 A32])) traps.c:21# {*movsi_internal}
     (nil))
(insn# 0 0 (set (reg/f:SI 30 $fp)
        (mem/c:SI (plus:SI (reg/f:SI 29 $sp)
                (const_int 24 [0x18])) [ S4 A32])) traps.c:21# {*movsi_internal}
     (nil))
(insn# 0 0 (clobber (mem/c:BLK (reg/f:SI 29 $sp) [ A8])) traps.c:21#
     (nil))
(insn/f# 0 0 (set (reg/f:SI 29 $sp)
        (plus:SI (reg/f:SI 29 $sp)
            (const_int 32 [0x20]))) traps.c:21# {*addsi3}
     (expr_list:REG_CFA_DEF_CFA (reg/f:SI 29 $sp)
        (expr_list:REG_CFA_RESTORE (reg/f:SI 30 $fp)
            (expr_list:REG_CFA_RESTORE (reg:SI 31 $31)
                (nil)))))
(jump_insn# 0 0 (parallel [
            (simple_return)
            (use (reg:SI 31 $31))
        ]) traps.c:21# {simple_return_internal}
     (nil)
 -> simple_return)
(barrier 0 0 0)
(note# 0 0 NOTE_INSN_DELETED)

;; Function set_except_vector (set_except_vector, funcdef_no=1, decl_uid=959, cgraph_uid=1)

(note# 0 0 NOTE_INSN_DELETED)
(note# 0 0 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f# 0 0 (set (reg/f:SI 29 $sp)
        (plus:SI (reg/f:SI 29 $sp)
            (const_int -16 [0xfffffffffffffff0]))) traps.c:23# {*addsi3}
     (nil))
(insn# 0 0 (clobber (mem/c:BLK (reg/f:SI 29 $sp) [ A8])) traps.c:23#
     (nil))
(insn/f# 0 0 (set (mem/c:SI (plus:SI (reg/f:SI 29 $sp)
                (const_int 12 [0xc])) [ S4 A32])
        (reg/f:SI 30 $fp)) traps.c:23# {*movsi_internal}
     (expr_list:REG_FRAME_RELATED_EXPR (set/f (mem/c:SI (plus:SI (reg/f:SI 29 $sp)
                    (const_int 12 [0xc])) [ S4 A32])
            (reg/f:SI 30 $fp))
        (nil)))
(insn/f# 0 0 (set (reg/f:SI 30 $fp)
        (reg/f:SI 29 $sp)) traps.c:23# {*movsi_internal}
     (nil))
(note# 0 0 NOTE_INSN_PROLOGUE_END)
(insn# 0 0 (set (mem/c:SI (plus:SI (reg/f:SI 30 $fp)
                (const_int 16 [0x10])) [ n+0 S4 A32])
        (reg:SI 4 $4 [ n ])) traps.c:23# {*movsi_internal}
     (nil))
(insn# 0 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 30 $fp)
                (const_int 20 [0x14])) [ addr+0 S4 A32])
        (reg:SI 5 $5 [ addr ])) traps.c:23# {*movsi_internal}
     (nil))
(note# 0 0 NOTE_INSN_FUNCTION_BEG)
(insn# 0 0 (set (reg/f:SI 2 $2 [196])
        (mem/f/c:SI (plus:SI (reg/f:SI 30 $fp)
                (const_int 20 [0x14])) [ addr+0 S4 A32])) traps.c:24# {*movsi_internal}
     (nil))
(insn# 0 0 (const_int 1 [0x1]) traps.c:24# {hazard_nop}
     (nil))
(insn# 0 0 (set (mem/c:SI (reg/f:SI 30 $fp) [ handler+0 S4 A32])
        (reg/f:SI 2 $2 [196])) traps.c:24# {*movsi_internal}
     (nil))
(insn# 0 0 (set (reg:SI 2 $2 [197])
        (high:SI (symbol_ref:SI ("exception_handlers") <var_decl # exception_handlers>))) traps.c:25# {*movsi_internal}
     (nil))
(insn# 0 0 (set (reg:SI 3 $3 [198])
        (mem/c:SI (plus:SI (reg/f:SI 30 $fp)
                (const_int 16 [0x10])) [ n+0 S4 A32])) traps.c:25# {*movsi_internal}
     (nil))
(insn# 0 0 (const_int 1 [0x1]) traps.c:25# {hazard_nop}
     (nil))
(insn# 0 0 (set (reg:SI 3 $3 [199])
        (ashift:SI (reg:SI 3 $3 [198])
            (const_int 2 [0x2]))) traps.c:25# {*ashlsi3}
     (nil))
(insn# 0 0 (set (reg:SI 2 $2 [201])
        (lo_sum:SI (reg:SI 2 $2 [197])
            (symbol_ref:SI ("exception_handlers") <var_decl # exception_handlers>))) traps.c:25# {*lowsi}
     (nil))
(insn# 0 0 (set (reg/f:SI 2 $2 [200])
        (plus:SI (reg:SI 3 $3 [199])
            (reg:SI 2 $2 [201]))) traps.c:25# {*addsi3}
     (nil))
(insn# 0 0 (set (reg:SI 2 $2 [202])
        (mem/j:SI (reg/f:SI 2 $2 [200]) [ exception_handlers S4 A32])) traps.c:25# {*movsi_internal}
     (nil))
(insn# 0 0 (const_int 1 [0x1]) traps.c:25# {hazard_nop}
     (nil))
(insn# 0 0 (set (mem/c:SI (plus:SI (reg/f:SI 30 $fp)
                (const_int 4 [0x4])) [ old_handler+0 S4 A32])
        (reg:SI 2 $2 [202])) traps.c:25# {*movsi_internal}
     (nil))
(insn# 0 0 (set (reg:SI 2 $2 [203])
        (high:SI (symbol_ref:SI ("exception_handlers") <var_decl # exception_handlers>))) traps.c:27# {*movsi_internal}
     (nil))
(insn# 0 0 (set (reg:SI 3 $3 [204])
        (mem/c:SI (plus:SI (reg/f:SI 30 $fp)
                (const_int 16 [0x10])) [ n+0 S4 A32])) traps.c:27# {*movsi_internal}
     (nil))
(insn# 0 0 (const_int 1 [0x1]) traps.c:27# {hazard_nop}
     (nil))
(insn# 0 0 (set (reg:SI 3 $3 [205])
        (ashift:SI (reg:SI 3 $3 [204])
            (const_int 2 [0x2]))) traps.c:27# {*ashlsi3}
     (nil))
(insn# 0 0 (set (reg:SI 2 $2 [207])
        (lo_sum:SI (reg:SI 2 $2 [203])
            (symbol_ref:SI ("exception_handlers") <var_decl # exception_handlers>))) traps.c:27# {*lowsi}
     (nil))
(insn# 0 0 (set (reg/f:SI 2 $2 [206])
        (plus:SI (reg:SI 3 $3 [205])
            (reg:SI 2 $2 [207]))) traps.c:27# {*addsi3}
     (nil))
(insn# 0 0 (set (reg:SI 3 $3 [208])
        (mem/c:SI (reg/f:SI 30 $fp) [ handler+0 S4 A32])) traps.c:27# {*movsi_internal}
     (nil))
(insn# 0 0 (const_int 1 [0x1]) traps.c:27# {hazard_nop}
     (nil))
(insn# 0 0 (set (mem/j:SI (reg/f:SI 2 $2 [206]) [ exception_handlers S4 A32])
        (reg:SI 3 $3 [208])) traps.c:27# {*movsi_internal}
     (nil))
(insn# 0 0 (set (reg/f:SI 2 $2 [orig:194 D.1005 ] [194])
        (mem/c:SI (plus:SI (reg/f:SI 30 $fp)
                (const_int 4 [0x4])) [ old_handler+0 S4 A32])) traps.c:28# {*movsi_internal}
     (nil))
(insn# 0 0 (use (reg/i:SI 2 $2)) traps.c:29#
     (nil))
(note# 0 0 NOTE_INSN_EPILOGUE_BEG)
(insn# 0 0 (clobber (mem/c:BLK (reg/f:SI 29 $sp) [ A8])) traps.c:29#
     (nil))
(insn/f# 0 0 (set (reg/f:SI 29 $sp)
        (reg/f:SI 30 $fp)) traps.c:29# {*movsi_internal}
     (expr_list:REG_CFA_DEF_CFA (plus:SI (reg/f:SI 29 $sp)
            (const_int 16 [0x10]))
        (nil)))
(insn# 0 0 (set (reg/f:SI 30 $fp)
        (mem/c:SI (plus:SI (reg/f:SI 29 $sp)
                (const_int 12 [0xc])) [ S4 A32])) traps.c:29# {*movsi_internal}
     (nil))
(insn# 0 0 (clobber (mem/c:BLK (reg/f:SI 29 $sp) [ A8])) traps.c:29#
     (nil))
(insn/f# 0 0 (set (reg/f:SI 29 $sp)
        (plus:SI (reg/f:SI 29 $sp)
            (const_int 16 [0x10]))) traps.c:29# {*addsi3}
     (expr_list:REG_CFA_DEF_CFA (reg/f:SI 29 $sp)
        (expr_list:REG_CFA_RESTORE (reg/f:SI 30 $fp)
            (nil))))
(jump_insn# 0 0 (parallel [
            (simple_return)
            (use (reg:SI 31 $31))
        ]) traps.c:29# {simple_return_internal}
     (nil)
 -> simple_return)
(barrier 0 0 0)
(note# 0 0 NOTE_INSN_DELETED)
